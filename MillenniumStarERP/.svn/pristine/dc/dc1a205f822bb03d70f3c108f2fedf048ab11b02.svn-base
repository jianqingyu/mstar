//
//  ConfirmOrderVC.m
//  MillenniumStarERP
//
//  Created by yjq on 16/9/14.
//  Copyright © 2016年 com.millenniumStar. All rights reserved.
//

#import "ConfirmOrderVC.h"
#import "ConfirmOrdHeadView.h"
#import "ConfirmOrdCell.h"
#import "ConfirmOrderVC.h"
#import "PayViewController.h"
#import "ChooseAddressVC.h"
#import "OrderListInfo.h"
#import "AddressInfo.h"
#import "DetailTypeInfo.h"
#import "SearchCustomerVC.h"
#import "CustomPopView.h"
#import "CustomerInfo.h"
#import "StrWithIntTool.h"
#import "CustomProDetailVC.h"
#import "OrderPriceInfo.h"
@interface ConfirmOrderVC ()<UITableViewDelegate,UITableViewDataSource,
                            ConfirmOrdHeadViewDelegate,ConfirmOrdCellDelegate>{
    int curPage;
    int pageCount;
    int totalCount;//商品总数量
}
@property (weak, nonatomic) ConfirmOrdHeadView *headView;
@property (strong, nonatomic) UITableView *tableView;
@property (weak, nonatomic) IBOutlet UIButton *conBtn;
@property (weak, nonatomic) IBOutlet UIButton *allBtn;
@property (weak, nonatomic) IBOutlet UILabel *priceLab;
@property (weak, nonatomic) IBOutlet UIView *bottomView;
@property (nonatomic,strong)NSMutableArray *dataArray;
@property (nonatomic,strong)NSMutableArray *selectDataArray;
@property (nonatomic,strong)NSArray*qualityArr;
@property (nonatomic,strong)NSArray*colorArr;
@property (nonatomic,strong)NSArray*priceArr;
@property (nonatomic,strong)CustomPopView *popView;
@property (nonatomic,strong)DetailTypeInfo *qualityInfo;
@property (nonatomic,strong)DetailTypeInfo *colorInfo;
@property (nonatomic,strong)CustomerInfo *cusInfo;
@property (nonatomic,strong)AddressInfo *addressInfo;
@property (nonatomic,assign)BOOL isSelBtn;
@property (weak,  nonatomic)UIButton *topBtn;
@end

@implementation ConfirmOrderVC

- (void)viewDidLoad {
    [super viewDidLoad];
    self.title = @"确定订单";
    [self setupTableView];
    [self creatHeadView];
    self.dataArray = @[].mutableCopy;
    self.selectDataArray = @[].mutableCopy;
    self.conBtn.layer.cornerRadius = 5;
    self.conBtn.layer.masksToBounds = YES;
    [self setupHeaderRefresh];
    [self setupPopView];
}

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    self.isSelBtn = NO;
}

- (void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    [self.headView.customerFie resignFirstResponder];
}

- (void)setupTableView{
    self.tableView = [[UITableView alloc]initWithFrame:CGRectZero style:UITableViewStyleGrouped];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
    self.tableView.backgroundColor = DefaultColor;
    [self.view addSubview:self.tableView];
    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(self.view).offset(0);
        make.top.equalTo(self.view).offset(50);
        make.bottom.equalTo(self.view).offset(-40);
        make.right.equalTo(self.view).offset(0);
    }];
    self.tableView.tableFooterView = [[UIView alloc]initWithFrame:CGRectZero];
}
#pragma mark -- HeadView
- (void)creatHeadView{
    ConfirmOrdHeadView *view = [ConfirmOrdHeadView view];
    view.frame = CGRectMake(0, 0, SDevWidth, 275);
    view.delegate = self;
    [self.view addSubview:view];
    [view mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(self.view).offset(0);
        make.top.equalTo(self.view).offset(0);
        make.right.equalTo(self.view).offset(0);
        make.height.mas_equalTo(@275);
    }];
    UISwipeGestureRecognizer *recognizer = [[UISwipeGestureRecognizer alloc]
                        initWithTarget:self action:@selector(handleSwipeFrom:)];
    [recognizer setDirection:(UISwipeGestureRecognizerDirectionUp)];
    [view addGestureRecognizer:recognizer];
    self.headView = view;
    
    UIButton *headBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [headBtn setLayerWithW:0.1 andColor:DefaultColor andBackW:0.8];
    [headBtn setImage:[UIImage imageNamed:@"icon_up_o"] forState:UIControlStateNormal];
    [headBtn setImage:[UIImage imageNamed:@"icon_down_o"] forState:UIControlStateSelected];
    headBtn.backgroundColor = CUSTOM_COLOR(245, 245, 247);
    [self.view addSubview:headBtn];
    [headBtn mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(self.view).offset(0);
        make.top.equalTo(self.view).offset(275);
        make.right.equalTo(self.view).offset(0);
        make.height.mas_equalTo(@40);
    }];
    [headBtn addTarget:self action:@selector(btnShow:)
                                  forControlEvents:UIControlEventTouchUpInside];
    self.topBtn = headBtn;
}

- (void)dismissHeadView{
    [UIView animateWithDuration:1 animations:^{
        self.topBtn.selected = YES;
        self.headView.hidden = YES;
        [self.topBtn mas_updateConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(self.view).offset(0);
        }];
    }];
}

- (void)showHeadView{
    [UIView animateWithDuration:1 animations:^{
        self.topBtn.selected = NO;
        self.headView.hidden = NO;
        [self.topBtn mas_updateConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(self.view).offset(275);
        }];
    }];
}

- (void)handleSwipeFrom:(UISwipeGestureRecognizer *)recognizer{
    if (!self.topBtn.selected) {
        [self dismissHeadView];
    }
}

- (void)btnShow:(UIButton *)btn{
    if (!self.topBtn.selected) {
        [self dismissHeadView];
    }else{
        [self showHeadView];
    }
}

- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView{
    if (!self.headView.hidden) {
        [self dismissHeadView];
    }
}

#pragma mark -- CustomPopView
- (void)setupPopView{
    CustomPopView *popV = [[CustomPopView alloc]initWithFrame:
                           CGRectMake(0, 0, SDevWidth, SDevHeight)];
    popV.popBack = ^(id dict){
        [self chooseHeadView:dict];
    };
    self.popView = popV;
}
//选择成色与质量
- (void)chooseHeadView:(NSDictionary *)dict{
    NSIndexPath *path = [dict allKeys][0];
    DetailTypeInfo *info = [dict allValues][0];
    if (path.section==2) {
        self.qualityInfo = info;
        self.headView.qualityMes = info.title;
    }else{
        self.colorInfo = info;
        self.headView.colorMes = info.title;
    }
    [self loadUpOrderPrice];
}
//选择客户
- (void)setCusInfo:(CustomerInfo *)cusInfo{
    if (cusInfo) {
        _cusInfo = cusInfo;
        self.headView.customerFie.text = cusInfo.customerName;
    }
}
//选择地址
- (void)setAddressInfo:(AddressInfo *)addressInfo{
    if (addressInfo) {
        _addressInfo = addressInfo;
        self.headView.addInfo = _addressInfo;
    }
}

- (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event{
    [self.popView removeFromSuperview];
}

- (void)loadUpOrderPrice{
    [SVProgressHUD show];
    NSString *regiUrl = [NSString stringWithFormat:@"%@GetOrderPricePageList",baseUrl];
    NSMutableDictionary *params = [NSMutableDictionary dictionary];
    params[@"tokenKey"] = [AccountTool account].tokenKey;
    params[@"cpage"] = @(curPage-1);
    if (self.qualityInfo){
        params[@"qualityId"] = @(_qualityInfo.id);
    }
    if (self.colorInfo) {
        params[@"purityId"] = @(_colorInfo.id);
    }
    [BaseApi getGeneralData:^(BaseResponse *response, NSError *error) {
        if ([response.error intValue]==0) {
            NSArray *arr = [OrderPriceInfo objectArrayWithKeyValuesArray:response.data[@"priceList"]];
            if (self.selectDataArray.count) {
                for (OrderListInfo *selist in self.selectDataArray) {
                    [self changePriceWithArr:arr andInfo:selist];
                }
                [self syncPriceLabel];
            }else{
                [self changePriceWithArr:arr andInfo:nil];
            }
            [self.tableView reloadData];
        }else{
            [MBProgressHUD showError:response.message];
        }
        [SVProgressHUD dismiss];
    } requestURL:regiUrl params:params];
}

- (void)changePriceWithArr:(NSArray *)arr andInfo:(OrderListInfo *)orderInfo{
    if (arr.count==0) {
        return;
    }
    for (int i=0; i<self.dataArray.count; i++) {
        OrderListInfo *list = self.dataArray[i];
        OrderPriceInfo *priceI = arr[i];
        list.price = priceI.price;
        if (orderInfo&&(orderInfo.id==priceI.id)) {
            orderInfo.price = priceI.price;
        }
    }
}

#pragma mark -- 网络请求
- (void)setupHeaderRefresh{
    // 刷新功能
    MJRefreshStateHeader*header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        [self headerRereshing];
    }];
    [header setTitle:@"用力往下拉我!!!" forState:MJRefreshStateIdle];
    [header setTitle:@"快放开我!!!" forState:MJRefreshStatePulling];
    [header setTitle:@"努力刷新中..." forState:MJRefreshStateRefreshing];
    _tableView.header = header;
    [self.tableView.header beginRefreshing];
}

- (void)setupFootRefresh{
    
    MJRefreshAutoNormalFooter*footer = [MJRefreshAutoNormalFooter footerWithRefreshingBlock:^{
        [self footerRereshing];
    }];
    [footer setTitle:@"上拉有惊喜" forState:MJRefreshStateIdle];
    [footer setTitle:@"好了，可以放松一下手指" forState:MJRefreshStatePulling];
    [footer setTitle:@"努力加载中，请稍候" forState:MJRefreshStateRefreshing];
    _tableView.footer = footer;
}
#pragma mark - refresh
- (void)headerRereshing{
    [self loadNewRequestWith:YES];
}

- (void)footerRereshing{
    [self loadNewRequestWith:NO];
}

- (void)loadNewRequestWith:(BOOL)isPullRefresh{
    self.tableView.footer.hidden = NO;
    self.tableView.header.hidden = NO;
    if (isPullRefresh){
        curPage = 1;
        [self.dataArray removeAllObjects];
        [self.selectDataArray removeAllObjects];
    }
    self.allBtn.selected = NO;
    [self syncPriceLabel];
    [self getCommodityData];
}
#pragma mark - 网络数据
- (void)getCommodityData{
    [SVProgressHUD show];
    NSMutableDictionary *params = [NSMutableDictionary dictionary];
    params[@"tokenKey"] = [AccountTool account].tokenKey;
    params[@"cpage"] = @(curPage);
    if (self.qualityInfo){
        params[@"qualityId"] = @(self.qualityInfo.id);
    }
    if (self.colorInfo) {
        params[@"purityId"] = @(self.colorInfo.id);
    }
    NSString *url = [NSString stringWithFormat:@"%@OrderListPage",baseUrl];
    [BaseApi getGeneralData:^(BaseResponse *response, NSError *error) {
        [self.tableView.header endRefreshing];
        [self.tableView.footer endRefreshing];
        if ([response.error intValue]==0) {
            [self setupFootRefresh];
            if ([response.data isKindOfClass:[NSDictionary class]]&&[(NSArray *)response.data count]>0)
            {
                [self setupDataWithDict:response.data];
                [self setupListDataWithDict:response.data[@"currentOrderlList"]];
                [self.tableView reloadData];
            }
            [SVProgressHUD dismiss];
        }
    } requestURL:url params:params];
}
//更新数据
- (void)setupDataWithDict:(NSDictionary *)dict{
    if (dict[@"address"]&&!self.addressInfo) {
        self.addressInfo = [AddressInfo objectWithKeyValues:
                            dict[@"address"]];
    }
    if (dict[@"customer"]&&!self.cusInfo) {
        self.cusInfo = [CustomerInfo objectWithKeyValues:
                        dict[@"customer"]];
    }
    if (dict[@"modelColor"]) {
        self.colorArr = [DetailTypeInfo
                         objectArrayWithKeyValuesArray:dict[@"modelColor"]];
    }
    if (dict[@"modelQuality"]) {
        self.qualityArr = [DetailTypeInfo
                        objectArrayWithKeyValuesArray:dict[@"modelQuality"]];
    }
}
//更新list数据
- (void)setupListDataWithDict:(NSDictionary *)dicList{
    if([dicList[@"list"]isKindOfClass:[NSArray class]]
       &&[dicList[@"list"] count]>0){
        self.tableView.footer.state = MJRefreshStateIdle;
        curPage++;
        totalCount = [dicList[@"list_count"]intValue];
        NSArray *seaArr = [OrderListInfo objectArrayWithKeyValuesArray:dicList[@"list"]];
        [_dataArray addObjectsFromArray:seaArr];
        if(_dataArray.count>=totalCount){
            //已加载全部数据
            MJRefreshAutoNormalFooter*footer = (MJRefreshAutoNormalFooter*)_tableView.footer;
            [footer setTitle:@"没有更多了" forState:MJRefreshStateNoMoreData];
            self.tableView.footer.state = MJRefreshStateNoMoreData;
        }
    }else{
        //[self.tableView.header removeFromSuperview];
        MJRefreshAutoNormalFooter*footer = (MJRefreshAutoNormalFooter*)_tableView.footer;
        [footer setTitle:@"暂时没有商品" forState:MJRefreshStateNoMoreData];
        _tableView.footer.state = MJRefreshStateNoMoreData;
        self.tableView.footer.hidden = YES;
        self.tableView.header.hidden = YES;
    }
}

#pragma mark -- 头视图的点击事件 HeadViewDelegate
- (void)btnClick:(ConfirmOrdHeadView *)headView andIndex:(NSInteger)index andMes:(NSString *)mes{
    switch (index) {
        case 0:{
            ChooseAddressVC *chooseVc = [ChooseAddressVC new];
            chooseVc.addBack = ^(AddressInfo *info){
                self.addressInfo = info;
            };
            [self.navigationController pushViewController:chooseVc animated:YES];
        }
            break;
        case 1:{
            SearchCustomerVC *cusVc = [SearchCustomerVC new];
            cusVc.searchMes = self.headView.customerFie.text;
            cusVc.back = ^(id dict){
                self.cusInfo = dict;
            };
            self.isSelBtn = YES;
            [self.navigationController pushViewController:cusVc animated:YES];
        }
            break;
        case 5:{
            [self loadHaveCustomer:mes];
        }
            break;
        default:{
            [self openPopTableWithInPath:index];
        }
            break;
    }
}

- (void)loadHaveCustomer:(NSString *)message{
    if (self.isSelBtn) {
        return;
    }
    [SVProgressHUD show];
    NSString *regiUrl = [NSString stringWithFormat:@"%@IsHaveCustomer",baseUrl];
    NSMutableDictionary *params = [NSMutableDictionary dictionary];
    params[@"tokenKey"] = [AccountTool account].tokenKey;
    params[@"keyword"] = message;
    [BaseApi getGeneralData:^(BaseResponse *response, NSError *error) {
        if ([response.error intValue]==0) {
            if ([response.data[@"state"]intValue]==0) {
                SHOWALERTVIEW(@"没有此客户记录");
            }else if([response.data[@"state"]intValue]==1){
                self.cusInfo = [CustomerInfo objectWithKeyValues:response.data[@"customer"]];
            }else if ([response.data[@"state"]intValue]==2){
                SearchCustomerVC *cusVc = [SearchCustomerVC new];
                cusVc.searchMes = message;
                cusVc.back = ^(id dict){
                    self.cusInfo = dict;
                };
                [self.navigationController pushViewController:cusVc animated:YES];
            }
        }else{
            [MBProgressHUD showError:response.message];
        }
        [SVProgressHUD dismiss];
    } requestURL:regiUrl params:params];
}

- (void)openPopTableWithInPath:(NSInteger)index{
    if (index==2) {
        self.popView.typeList = self.qualityArr;
    }else{
        self.popView.typeList = self.colorArr;
    }
    NSIndexPath *inPath = [NSIndexPath indexPathForRow:0 inSection:index];
    self.popView.section = inPath;
    [self.view addSubview:self.popView];
}

#pragma mark -- tableViewDelegate
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return self.dataArray.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return 1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return 185;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 10.0f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    return 0.0001f;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    ConfirmOrdCell *ordCell = [ConfirmOrdCell cellWithTableView:tableView];
    ordCell.tag = indexPath.section;
    ordCell.delegate = self;
    OrderListInfo *listI;
    if (indexPath.section < self.dataArray.count)
    {
        listI = self.dataArray[indexPath.section];
    }
    ordCell.listInfo = listI;
    return ordCell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    [self editIndex:indexPath.section];
}

#pragma mark -- cell中的按钮点击
- (void)btnCellClick:(ConfirmOrdCell *)headView andIndex:(NSInteger)index{
    NSInteger ind = headView.tag;
    switch (index) {
        case 0:
            [self selectBtnClick:ind];
            break;
        case 1:
            [self editIndex:ind];
            break;
        case 2:
            [self deleteIndex:ind];
            break;
        default:
            break;
    }
}
//勾选
- (void)selectBtnClick:(NSInteger )indx
{
    if (indx < self.dataArray.count)
    {
        OrderListInfo *OrderListInfo = self.dataArray[indx];
        if (OrderListInfo.isSel == YES)
        {
            [self.selectDataArray removeObject:OrderListInfo];
             self.allBtn.selected = NO;
        }else{
            [self.selectDataArray addObject:OrderListInfo];
        }
        OrderListInfo.isSel = !OrderListInfo.isSel;
        if ([self isAllYes]) {
            self.allBtn.selected = YES;
        }
        //同步显示
        [self syncPriceLabel];
        NSIndexPath *indexPath = [NSIndexPath indexPathForRow:0 inSection:indx];
        [self.tableView reloadRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationNone];
    }
}

- (BOOL)isAllYes {
    for (OrderListInfo *OrderListInfo in _dataArray) {
        if (!OrderListInfo.isSel) {
            return NO;
        }
    }
    return YES;
}
//编辑
- (void)editIndex:(NSInteger)index{
    OrderListInfo *collectInfo = self.dataArray[index];
    CustomProDetailVC *detailVc = [CustomProDetailVC new];
    detailVc.isEdit = YES;
    detailVc.proId = collectInfo.id;
    detailVc.orderBack = ^(id dict){
        self.dataArray[index] = dict;
        NSIndexPath *indexPath = [NSIndexPath indexPathForRow:0 inSection:index];
        [self.tableView reloadRowsAtIndexPaths:@[indexPath]
                                   withRowAnimation:UITableViewRowAnimationNone];
    };
    [self.navigationController pushViewController:detailVc animated:YES];
}
//删除
- (void)deleteIndex:(NSInteger)index{
    OrderListInfo *collectInfo = [self.dataArray objectAtIndex:index];
    NSString *url = [NSString stringWithFormat:@"%@OrderCurrentDeleteModelItemDo",baseUrl];
    NSMutableDictionary *params = [NSMutableDictionary dictionary];
    params[@"tokenKey"] = [AccountTool account].tokenKey;
    params[@"itemId"] = @(collectInfo.id);
    [BaseApi getGeneralData:^(BaseResponse *response, NSError *error) {
        if ([response.error intValue]==0) {
            [MBProgressHUD showSuccess:response.message];
        }else{
            [MBProgressHUD showError:response.message];
        }
    } requestURL:url params:params];
    [self.dataArray removeObjectAtIndex:index];
    if ([self.selectDataArray containsObject:collectInfo])
    {
        [self.selectDataArray removeObject:collectInfo];
    }
    [self syncPriceLabel];
    [self.tableView reloadData];
}
//更新价格
- (void)syncPriceLabel
{
    double value = 0.0;
    if (_selectDataArray.count)
    {
        for (OrderListInfo *collectInfo in _selectDataArray)
        {
            value = value+collectInfo.price;
        }
    }
    self.priceLab.text = [NSString stringWithFormat:@"￥%0.2f",value];
}
//底部按钮
- (IBAction)chooseClick:(UIButton *)sender {
    if (sender.selected == NO)
    {
        [self.selectDataArray removeAllObjects];
        [self.selectDataArray addObjectsFromArray:self.dataArray];
        for (OrderListInfo *collInfo in self.dataArray) {
            collInfo.isSel = YES;
        }
        sender.selected = YES;
    }else{
        for (OrderListInfo *collInfo in self.dataArray) {
            collInfo.isSel = NO;
        }
        sender.selected = NO;
        [self.selectDataArray removeAllObjects];
    }
    [self syncPriceLabel];
    [self.tableView reloadData];
}

- (IBAction)confirmClick:(id)sender {
    if (!(self.colorInfo &&self.qualityInfo)) {
        [MBProgressHUD showError:@"请选择相关数据"];
        if (self.topBtn.selected) {
            [self showHeadView];
        }
        return;
    }
    if (!self.selectDataArray.count) {
        [MBProgressHUD showError:@"请选择商品"];
        return;
    }
    NSMutableArray *mutArr = [NSMutableArray array];
    for (OrderListInfo *collInfo in _selectDataArray) {
        [mutArr addObject:@(collInfo.id)];
    }
    NSString *url = [NSString stringWithFormat:@"%@OrderCurrentSubmitDo",baseUrl];
    NSMutableDictionary *params = [NSMutableDictionary dictionary];
    params[@"tokenKey"] = [AccountTool account].tokenKey;
    params[@"itemId"] = [StrWithIntTool strWithIntArr:mutArr];
    params[@"addressId"] = @(self.addressInfo.id);
    params[@"purityId"] = @(self.colorInfo.id);
    params[@"qualityId"] = @(self.qualityInfo.id);
    if (self.headView.wordFie.text.length>0) {
        params[@"word"] = _headView.wordFie.text;
    }
    params[@"customerID"] = @(self.cusInfo.customerID);
    [BaseApi getGeneralData:^(BaseResponse *response, NSError *error) {
        if ([response.error intValue]==0) {
            PayViewController *payVc = [PayViewController new];
            [self.navigationController pushViewController:payVc animated:YES];
        }else{
            [MBProgressHUD showError:response.message];
        }
    } requestURL:url params:params];
}

@end
